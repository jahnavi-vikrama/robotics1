1.In RRT we are taking a random point and in that direction, if there is no obstacle collision we are taking a node with specific step size. If we consider 3 points in the path(not on a line) for instance, it is possible for the first point to last point there can be a straight line without obstacle collision. But due to random point sampling the direction of new point can be in any direction and therefore we are travelling extra distances according to the algorithm at different items.This is happening on large scale and essentially the path path we get is not guaranteed the shortest.

2.If we increase the step size value to a more that the dimensions of the obstacle it is possible for the path to be across it and still be not detected as collision path. But this results in collision.

3.If we increase the search bounds, not guaranteed to converge to out solution within the feasible iterations. As we are taking random samples, it's highly possible to diverge from the solution. With dimensions, if the goal and start are in same plane or are in n dimension, we search in more than that, we are increasing the search space, we makes it difficult to reach the solution mostly as we can go to points that are not required search.Example: if start and goal in 2D plane where z=0, but if we consider 3D, we can get into plane z=1 and could be searching their for goal which is essentially making it tough to find the path. 

4.The benefit of taking small step size is when there are many small obstacles, otherwise the path might be passing through the obstacle if the size of obstacle is less than the step size. This leads to giving wrong paths and many iterations.
